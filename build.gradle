buildscript {
    repositories {
        mavenCentral()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

apply plugin: 'scala'
apply plugin: 'forge'

ext.configFile = file "build.properties"
configFile.withReader {
    // read config.  it shall from now on be referenced as simply config or as project.config
   def prop = new Properties()
    prop.load(it)
   project.ext.config = new ConfigSlurper().parse prop
}

version = config.mc_version+"-"+config.mod_version+"-"+config.build_number
group = "geek.lawsof.physics" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "LawsOfPhysics"

minecraft {
    version = "1.7.2-10.12.2.1131"
    assetDir = "eclipse/assets"
}

processResources
        {
            // this will ensure that this task is redone when the versions change.
            inputs.property "version", project.version
            inputs.property "mcversion", project.minecraft.version

            // replace stuff in mcmod.info, nothing else
            from(sourceSets.main.resources.srcDirs) {
                include 'mcmod.info'

                // replace version and mcversion
                expand 'version': project.version, 'mcversion': project.minecraft.version
            }

            // copy everything else, thats not the mcmod.info
            from(sourceSets.main.resources.srcDirs) {
                exclude 'mcmod.info'
            }
        }
		
// change the name of my obfuscated jar
jar {
dependsOn "incrementBuildNumber"
        appendix = 'universal'
               
}

// add a source jar
task sourceJar(type: Jar) {
        from sourceSets.main.allSource
        appendix = 'src'
}
 
// add a javadoc jar
task javadocJar(type: Jar, dependsOn: javadoc) {
        appendix = 'javadoc'
        from 'build/docs/javadoc'
}
 
// because the normal output has been made to be obfuscated
task deobfJar(type: Jar) {
        from sourceSets.main.output
        appendix = 'deobf'
}

task("incrementBuildNumber")
{
    // increment build number
    doFirst {
        // increment
        config.build_number = (config.build_number.toString().toInteger()) + 1
       
        // write back to the file
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}
artifacts {
        archives sourceJar
        archives deobfJar
        archives javadocJar
               
        //archives obfJar
}